<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApGYAMKRmAICkZgC/pGYA/6Rm
        AP+kZgD/pGYA/6RmAP+kZgD/pGYAv6RmAICkZgAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApGYAYKRmAM+kZgD/pGYA/6Rm
        AP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgDPpGYAUAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApGYAIKRmAL+kZgD/pGYA/6Rm
        AP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgD/pGYAv6Rm
        ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKRmAFCkZgDvpGYA/6Rm
        AP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+OeyT/jnsk/6RmAP+kZgD/pGYA/6RmAP+kZgD/pGYA/6Rm
        AP+kZgD/pGYA76RmAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkZgBgpGYA/6Rm
        AP+kZgD/pGYA/6RmAP+kZgD/f4k8/1qtef810LX/LtfB/y7Xwf8u18H/LtfB/zXQtf9arXn/f4k8/6Rm
        AP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAApGYAUKRm
        AP+kZgD/pGYA/6RmAP+kZgD/f4k8/z3Jqf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7X
        wf8u18H/Pcmp/3+JPP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAFAAAAAAAAAAAAAAAAAAAAAAAAAAAKRm
        ACCkZgDvpGYA/6RmAP+kZgD/pGYA/1qtef8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7X
        wf8u18H/LtfB/y7Xwf8u18H/LtfB/1qtef+kZgD/pGYA/6RmAP+kZgD/pGYA76RmACAAAAAAAAAAAAAA
        AAAAAAAApGYAv6RmAP+kZgD/pGYA/6RmAP9arXn/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7X
        wf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB74KGN9+kZgD/pGYA/6RmAP+kZgD/pGYAvwAA
        AAAAAAAAAAAAAKRmAGCkZgD/pGYA/6RmAP+kZgD/Wq15/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7X
        wf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwe8u18EwpGYAEKRmAM+kZgD/pGYA/6Rm
        AP+kZgD/pGYAYAAAAAAAAAAApGYAz6RmAP+kZgD/pGYA/3+JPP8u18H/LtfB/y7Xwf8u18H/LtfB/y7X
        wf8u18HvLtfBjy7XwUAAAAAAAAAAAC7XwTAu18GPLtfB7y7Xwf8u18HPLtfBEAAAAAAAAAAApGYAIKRm
        AO+kZgD/pGYA/6RmAP+kZgDPAAAAAKRmADCkZgD/pGYA/6RmAP+kZgD/Pcmp/y7Xwf8u18H/LtfB/y7X
        wf8u18H/LtfBry7XwRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu18EQLtfBcC7XwRAAAAAAAAAAAAAA
        AAAAAAAApGYAgKRmAP+kZgD/pGYA/6RmAP+kZgAwpGYAgKRmAP+kZgD/pGYA/3+JPP8u18H/LtfB/y7X
        wf8u18H/LtfB/y7Xwa8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACkZgAQpGYA/6RmAP+kZgD/pGYA/6RmAICkZgC/pGYA/6RmAP+kZgD/Wq15/y7X
        wf8u18H/LtfB/y7Xwf8u18HvLtfBEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkZgCvpGYA/6RmAP+kZgD/pGYAv6RmAP+kZgD/pGYA/6Rm
        AP810LX/LtfB/y7Xwf8u18H/LtfB/1mue6+kZgBApGYAQKRmAECkZgBApGYAQKRmAECkZgBApGYAQKRm
        AEAAAAAAAAAAAAAAAAAAAAAApGYAIKRmAEAAAAAAAAAAAKRmAGCkZgD/pGYA/6RmAP+kZgD/pGYA/6Rm
        AP+kZgD/pGYA/y7Xwf8u18H/LtfB/y7Xwf810LX/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgD/pGYA/6Rm
        AP+kZgD/pGYA/6RmAEAAAAAAAAAAAKRmAGCkZgD/pGYA/6RmAN+kZgAQpGYAQKRmAP+kZgD/pGYA/6Rm
        AP+kZgD/pGYA/6RmAP+OeyT/LtfB/y7Xwf8u18H/LtfB/0y7kf+kZgD/pGYA/6RmAP+kZgD/pGYA/6Rm
        AP+kZgD/pGYA/6RmAP+kZgD/pGYAQAAAAAAAAAAApGYA36RmAP+kZgD/pGYA/6RmAICkZgAgpGYA/6Rm
        AP+kZgD/pGYA/6RmAP+kZgD/pGYA/457JP8u18H/LtfB/y7Xwf8u18H/TLuR/6RmAP+kZgD/pGYA/6Rm
        AP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgBAAAAAAAAAAACkZgDvpGYA/6RmAP+kZgD/pGYAgKRm
        ACCkZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgD/pGYA/y7Xwf8u18H/LtfB/y7Xwf810LX/pGYA/6Rm
        AP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAEAAAAAAAAAAAKRmAGCkZgD/pGYA/6Rm
        AN+kZgAQpGYAQKRmAP+kZgD/pGYA/6RmAP+kZgAwpGYAQKRmAECkZgBALtfB7y7Xwf8u18H/LtfB/y7X
        wf9ZrnuvpGYAQKRmAECkZgBApGYAQKRmAECkZgBApGYAQKRmAECkZgBAAAAAAAAAAAAAAAAAAAAAAKRm
        ACCkZgBAAAAAAAAAAACkZgBgpGYA/6RmAP+kZgD/pGYA/wAAAAAAAAAAAAAAAAAAAAAu18GfLtfB/y7X
        wf8u18H/LtfB/y7Xwe8u18EQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAKRmAK+kZgD/pGYA/6RmAP+kZgC/AAAAAAAAAAAAAAAAAAAAAC7X
        wVAu18H/LtfB/y7Xwf8u18H/LtfB/y7Xwa8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACkZgAQpGYA/6RmAP+kZgD/pGYA/6RmAIAAAAAAAAAAAAAA
        AAAAAAAAAAAAAC7Xwd8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwa8u18EQAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALtfBEC7XwXAAAAAAAAAAAAAAAAAAAAAAAAAAAKRmAICkZgD/pGYA/6RmAP+kZgD/pGYAMAAA
        AAAAAAAAAAAAAAAAAAAAAAAALtfBUC7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwe8u18GPLtfBMAAA
        AAAAAAAALtfBMC7XwY8u18HvLtfB/y7Xwa8u18EQAAAAAAAAAACkZgAgpGYA76RmAP+kZgD/pGYA/6Rm
        AM8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtfBny7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7X
        wf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwc8u18EgpGYAEKRmAM+kZgD/pGYA/6Rm
        AP+kZgD/pGYAYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtfBny7Xwf8u18H/LtfB/y7X
        wf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwe+Sdx7PpGYA/6Rm
        AP+kZgD/pGYA/6RmAL8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtfBny7X
        wf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/Wq15/6Rm
        AP+kZgD/pGYA/6RmAP+kZgDvpGYAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAALtfBUC7Xwd8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/LtfB/y7Xwf8u18H/Pcmp/3+J
        PP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7XwVAu18GvLtfB7y7Xwf8u18H/LtfB/y7Xwf810LX/U7SF/3+J
        PP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7XwTCOeyT/pGYA/6Rm
        AP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgDvpGYAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKRm
        AP+kZgD/pGYA/6RmAP+kZgD/pGYA/6RmAP+kZgD/pGYAv6RmACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAApGYA/6RmAP+kZgD/pGYA/6RmAP+kZgD/pGYAz6RmAGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACkZgD/pGYA/6RmAP+kZgC/pGYAgKRmADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8AD//8AAP/8AAA/+AAAH/AAAA/gAAAHwAAAA8AAAAOAAAABgAGBgQAH
        48AAH//AAB//4AAAHmAAAAwAAAAMAAAADAAAAAwAAAAeYPAf/+DwH//A+AfnwPgBgYH8AAAB/gAAA/8A
        AAP/gAAH/+AAD//+AB///wA///8A////A/8=
</value>
  </data>
</root>